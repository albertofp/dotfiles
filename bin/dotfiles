#!/bin/bash

# Returns errors if something goes wrong
set -e
DOTFILES_DIR=$HOME/dotfiles
PLAYBOOK_DIR=$DOTFILES_DIR/ansible

# Bootstrapping
# 1. OS check
# 2. Brew/Pacman install:
#   - Ansible
#   - ...

# Linux
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
  echo "OS identified: Linux"
  if ! [ -x "$(command -v ansible-playbook)" ]; then
    sudo pacman -S --noconfirm ansible
  fi

  echo "Running Playbook at $PLAYBOOK_DIR/linux-playbook.yaml"
  if [[ -f $HOME/.ansible_vault_pass.txt ]]; then
    ansible-playbook \
      --ask-become-pass \
      -i 'localhost,' \
      -c local $DOTFILES_DIR/ansible/linux-playbook.yaml \
      --vault-password-file $HOME/.ansible_vault_pass.txt
  else
    echo "No .ansible_vault_pass.txt found in HOME:"
    ansible-playbook \
      --ask-become-pass \
      -i 'localhost,' \
      -c local $DOTFILES_DIR/ansible/linux-playbook.yaml \
      --ask-vault-password
  fi

# MacOS
elif [[ "$OSTYPE" == "darwin"* ]]; then
  echo "OS identified: MacOS"
  if ! [ -x "$(command -v brew)" ]; then
    echo "Installing Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  fi

  if ! [ -x "$(command -v ansible)" ]; then
    brew install ansible
  fi

  echo "Running Playbook at $PLAYBOOK_DIR/mac-playbook.yaml"
  if [[ -f $HOME/.ansible_vault_pass.txt ]]; then
    ansible-playbook \
      --ask-become-pass \
      -i 'localhost,' \
      -c local $DOTFILES_DIR/ansible/mac-playbook.yaml \
      --vault-password-file $HOME/.ansible_vault_pass.txt
  else
    echo "No .ansible_vault_pass.txt found in HOME:"
    ansible-playbook \
      --ask-become-pass \
      -i 'localhost,' \
      -c local $DOTFILES_DIR/ansible/mac-playbook.yaml \
      --ask-vault-password
  fi
fi
